{"version":3,"sources":["node_modules/browser-pack/_prelude.js","lib/browser/fingerprint.js","lib/browser/isCordova.js","lib/browser/isReactNative.js","lib/browser/readAsByteArray.js","lib/browser/request.js","lib/browser/source.js","lib/browser/storage.js","lib/browser/uriToBlob.js","lib/error.js","lib/index.js","lib/upload.js","node_modules/extend/index.js","node_modules/js-base64/base64.js","node_modules/querystringify/index.js","node_modules/requires-port/index.js","node_modules/url-parse/index.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","tus","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","_dereq_","fingerprint","_isReactNative","file","options","callback","_isReactNative2","default","reactNativeFingerprint","name","type","size","lastModified","endpoint","join","exifHash","exif","hashCode","JSON","stringify","str","hash","char","charCodeAt","isCordova","PhoneGap","Cordova","cordova","isReactNative","navigator","product","toLowerCase","readAsByteArray","chunk","reader","FileReader","onload","Uint8Array","result","onerror","err","readAsArrayBuffer","newRequest","resolveUrl","_urlParse","XMLHttpRequest","origin","link","_urlParse2","toString","getSource","_uriToBlob","_isCordova","_readAsByteArray","FileSource","_classCallCheck","_file","start","end","_isCordova2","_readAsByteArray2","slice","StreamSource","chunkSize","_chunkSize","_buffer","undefined","_reader","_done","_readUntilEnoughDataOrDone","_this","hasEnoughData","len","value","_getDataFromBuffer","read","then","_ref","done","concat","catch","hasAllDataBeenRead","cancel","blobOrArray","b","Blob","set","constructor","input","uri","_uriToBlob2","blob","isFinite","getStorage","hasStorage","key","localStorage","setItem","getItem","SECURITY_ERR","QUOTA_EXCEEDED_ERR","canStoreURLs","LocalStorage","cb","removeItem","uriToBlob","xhr","responseType","response","open","send","DetailedError","error","causingErr","arguments","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","message","originalRequest","causingError","status","responseText","_upload","_storage","storage","defaultOptions","_upload2","moduleExport","Upload","_window","isSupported","prototype","FileStorage","_error","_extend","_jsBase","_request","_source","_fingerprint","_fingerprint2","resume","onProgress","onChunkComplete","onSuccess","onError","headers","Infinity","withCredentials","uploadUrl","uploadSize","overridePatchMethod","retryDelays","removeFingerprintOnSuccess","uploadLengthDeferred","urlStorage","fileReader","uploadDataDuringCreation","_extend2","url","_xhr","_offset","_aborted","_size","_retryAttempt","_retryTimeout","_offsetBeforeRetry","_emitError","_start","source","_this2","isNaN","errorCallback","shouldResetDelays","shouldRetry","delay","setTimeout","_resumeUpload","_hasStorage","fingerprintValue","resumedUrl","_createUpload","shouldTerminate","_this3","abort","close","clearTimeout","terminate","_error2","bytesSent","bytesTotal","bytesAccepted","setupXHR","_this4","inStatusCategory","_emitXhrError","location","getResponseHeader","_emitSuccess","_handleUploadResponse","_startUpload","_setupXHR","setRequestHeader","metadata","encodeMetadata","_addChunkToRequest","_this5","offset","parseInt","_emitProgress","_this6","_this7","upload","onprogress","lengthComputable","loaded","complete","_this8","_emitChunkComplete","retryAttempt","retryIfShould","encoded","push","Base64","encode","category","isOnline","online","onLine","isServerError","hasOwn","hasOwnProperty","toStr","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","setProperty","target","enumerable","configurable","newValue","writable","getProperty","extend","src","copy","copyIsArray","clone","deep","factory","_Base64","version","buffer","eval","b64chars","b64tab","bin","l","charAt","fromCharCode","String","cb_utob","cc","re_utob","utob","replace","cb_encode","ccc","padlen","ord","chars","btoa","_encode","isUint8Array","urisafe","m0","encodeURI","re_btou","cb_btou","cccc","cp","btou","cb_decode","_atob","atob","_decode","from","decode","noConflict","VERSION","fromBase64","toBase64","__buffer__","noEnum","v","extendString","has","undef","decodeURIComponent","encodeURIComponent","querystring","query","parser","part","exec","querystringify","prefix","pairs","parse","required","port","protocol","split","qs","slashes","protocolre","whitespace","left","RegExp","trimLeft","rules","sanitize","address","NaN","ignore","lolcation","loc","globalVar","finaldestination","Url","unescape","pathname","test","href","extractProtocol","match","rest","resolve","relative","base","path","last","unshift","up","splice","extracted","instruction","index","instructions","indexOf","host","hostname","username","password","auth","fn","pop","ins"],"mappings":"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","file":"./dist/tus.min.js","sourceRoot":"","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import isReactNative from \"./isReactNative\";\n\n/**\n * Generate a fingerprint for a file which will be used the store the endpoint\n *\n * @param {File} file\n * @param {Object} options\n * @param {Function} callback\n */\nexport default function fingerprint(file, options, callback) {\n  if (isReactNative()) {\n    return callback(null, reactNativeFingerprint(file, options));\n  }\n\n  return callback(null, [\n    \"tus-br\",\n    file.name,\n    file.type,\n    file.size,\n    file.lastModified,\n    options.endpoint\n  ].join(\"-\"));\n}\n\nfunction reactNativeFingerprint(file, options) {\n  let exifHash = file.exif ? hashCode(JSON.stringify(file.exif)) : \"noexif\";\n  return [\n    \"tus-rn\",\n    file.name || \"noname\",\n    file.size || \"nosize\",\n    exifHash,\n    options.endpoint\n  ].join(\"/\");\n}\n\nfunction hashCode(str) {\n  // from https://stackoverflow.com/a/8831937/151666\n  var hash = 0;\n  if (str.length === 0) {\n    return hash;\n  }\n  for (var i = 0; i < str.length; i++) {\n    var char = str.charCodeAt(i);\n    hash = ((hash << 5) - hash) + char;\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n","const isCordova = () => typeof window != \"undefined\" && (\n  typeof window.PhoneGap != \"undefined\" ||\n    typeof window.Cordova != \"undefined\" ||\n    typeof window.cordova != \"undefined\");\n\nexport default isCordova;\n","const isReactNative = () => (typeof navigator !== \"undefined\" &&\n  typeof navigator.product === \"string\" &&\n  navigator.product.toLowerCase() === \"reactnative\");\n\nexport default isReactNative;\n","/**\n * readAsByteArray converts a File object to a Uint8Array.\n * This function is only used on the Apache Cordova platform.\n * See https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-file/index.html#read-a-file\n */\nfunction readAsByteArray(chunk, callback) {\n  let reader = new FileReader();\n  reader.onload = () => {\n    callback(null, new Uint8Array(reader.result));\n  };\n  reader.onerror = (err) => {\n    callback(err);\n  };\n  reader.readAsArrayBuffer(chunk);\n}\n\nexport default readAsByteArray;\n","/* global window */\nimport URL from \"url-parse\";\n\nexport function newRequest() {\n  return new window.XMLHttpRequest();\n}\n\nexport function resolveUrl(origin, link) {\n  return new URL(link, origin).toString();\n}\n","import isReactNative from \"./isReactNative\";\nimport uriToBlob from \"./uriToBlob\";\nimport isCordova from \"./isCordova\";\nimport readAsByteArray from \"./readAsByteArray\";\n\nclass FileSource {\n  constructor(file) {\n    this._file = file;\n    this.size = file.size;\n  }\n\n  slice(start, end, callback) {\n    // In Apache Cordova applications, a File must be resolved using\n    // FileReader instances, see\n    // https://cordova.apache.org/docs/en/8.x/reference/cordova-plugin-file/index.html#read-a-file\n    if (isCordova()) {\n      readAsByteArray(this._file.slice(start, end), (err, chunk) => {\n        if (err) return callback(err);\n\n        callback(null, chunk);\n      });\n      return;\n    }\n\n    callback(null, this._file.slice(start, end));\n  }\n\n  close() {}\n}\n\nclass StreamSource {\n  constructor(reader, chunkSize) {\n    this._chunkSize = chunkSize;\n    this._buffer = undefined;\n    this._reader = reader;\n    this._done = false;\n  }\n\n  slice(start, end, callback) {\n    return this._readUntilEnoughDataOrDone(start, end, callback);\n  }\n\n  _readUntilEnoughDataOrDone(start, end, callback) {\n    const hasEnoughData = end <= len(this._buffer);\n    if (this._done || hasEnoughData) {\n      var value = this._getDataFromBuffer(start, end);\n      callback(null, value, value == null ? this._done : false);\n      return;\n    }\n    this._reader.read().then(({ value, done }) => {\n      if (done) {\n        this._done = true;\n      } else if (this._buffer === undefined) {\n        this._buffer = value;\n      } else {\n        this._buffer = concat(this._buffer, value);\n      }\n\n      this._readUntilEnoughDataOrDone(start, end, callback);\n    }).catch(err => {\n      callback(new Error(\"Error during read: \"+err));\n    });\n  }\n\n  _getDataFromBuffer(start, end) {\n    const chunk = this._buffer.slice(start, end);\n    const hasAllDataBeenRead = len(chunk) === 0;\n    if (this._done && hasAllDataBeenRead) {\n      this._buffer = undefined;\n      return null;\n    }\n    return chunk;\n  }\n\n  close() {\n    if (this._reader.cancel) {\n      this._reader.cancel();\n    }\n  }\n}\n\nfunction len(blobOrArray) {\n  if (blobOrArray === undefined) return 0;\n  if (blobOrArray.size !== undefined) return blobOrArray.size;\n  return blobOrArray.length;\n}\n\n/*\n  Typed arrays and blobs don't have a concat method.\n  This function helps StreamSource accumulate data to reach chunkSize.\n*/\nfunction concat(a, b) {\n  if (a.concat) { // Is `a` an Array?\n    return a.concat(b);\n  }\n  if (a instanceof Blob) {\n    return new Blob([a,b], {type: a.type});\n  }\n  if (a.set) { // Is `a` a typed array?\n    var c = new a.constructor(a.length + b.length);\n    c.set(a);\n    c.set(b, a.length);\n    return c;\n  }\n  throw new Error(\"Unknown data type\");\n}\n\nexport function getSource(input, chunkSize, callback) {\n  // In React Native, when user selects a file, instead of a File or Blob,\n  // you usually get a file object {} with a uri property that contains\n  // a local path to the file. We use XMLHttpRequest to fetch\n  // the file blob, before uploading with tus.\n  if (isReactNative() && input && typeof input.uri !== \"undefined\") {\n    uriToBlob(input.uri, (err, blob) => {\n      if (err) {\n        return callback(new Error(\"tus: cannot fetch `file.uri` as Blob, make sure the uri is correct and accessible. \" + err));\n      }\n      callback(null, new FileSource(blob));\n    });\n    return;\n  }\n\n  // Since we emulate the Blob type in our tests (not all target browsers\n  // support it), we cannot use `instanceof` for testing whether the input value\n  // can be handled. Instead, we simply check is the slice() function and the\n  // size property are available.\n  if (typeof input.slice === \"function\" && typeof input.size !== \"undefined\") {\n    callback(null, new FileSource(input));\n    return;\n  }\n\n  if (typeof input.read === \"function\") {\n    chunkSize = +chunkSize;\n    if (!isFinite(chunkSize)) {\n      callback(new Error(\"cannot create source for stream without a finite value for the `chunkSize` option\"));\n      return;\n    }\n    callback(null, new StreamSource(input, chunkSize));\n    return;\n  }\n\n  callback(new Error(\"source object may only be an instance of File, Blob, or Reader in this environment\"));\n}\n","/* global window, localStorage */\n\nlet hasStorage = false;\ntry {\n  hasStorage = \"localStorage\" in window;\n\n  // Attempt to store and read entries from the local storage to detect Private\n  // Mode on Safari on iOS (see #49)\n  var key = \"tusSupport\";\n  localStorage.setItem(key, localStorage.getItem(key));\n\n} catch (e) {\n  // If we try to access localStorage inside a sandboxed iframe, a SecurityError\n  // is thrown. When in private mode on iOS Safari, a QuotaExceededError is\n  // thrown (see #49)\n  if (e.code === e.SECURITY_ERR || e.code === e.QUOTA_EXCEEDED_ERR) {\n    hasStorage = false;\n  } else {\n    throw e;\n  }\n}\n\nexport const canStoreURLs = hasStorage;\n\nclass LocalStorage {\n  setItem(key, value, cb) {\n    cb(null, localStorage.setItem(key, value));\n  }\n\n  getItem(key, cb) {\n    cb(null, localStorage.getItem(key));\n  }\n\n  removeItem(key, cb) {\n    cb(null, localStorage.removeItem(key));\n  }\n}\n\nexport function getStorage() {\n  return hasStorage ? new LocalStorage() : null;\n}\n","/**\n * uriToBlob resolves a URI to a Blob object. This is used for\n * React Native to retrieve a file (identified by a file://\n * URI) as a blob.\n */\nfunction uriToBlob(uri, done) {\n  const xhr = new XMLHttpRequest();\n  xhr.responseType = \"blob\";\n  xhr.onload = () => {\n    const blob = xhr.response;\n    done(null, blob);\n  };\n  xhr.onerror = (err) => {\n    done(err);\n  };\n  xhr.open(\"GET\", uri);\n  xhr.send();\n}\n\nexport default uriToBlob;\n","class DetailedError extends Error {\n  constructor(error, causingErr = null, xhr = null) {\n    super(error.message);\n\n    this.originalRequest = xhr;\n    this.causingError = causingErr;\n\n    let message = error.message;\n    if (causingErr != null) {\n      message += `, caused by ${causingErr.toString()}`;\n    }\n    if (xhr != null) {\n      message += `, originated from request (response code: ${xhr.status}, response text: ${xhr.responseText})`;\n    }\n    this.message = message;\n  }\n}\n\nexport default DetailedError;\n","/* global window */\nimport Upload from \"./upload\";\nimport * as storage from \"./node/storage\";\n\nconst {defaultOptions} = Upload;\n\nconst moduleExport = {\n  Upload,\n  canStoreURLs: storage.canStoreURLs,\n  defaultOptions\n};\n\nif (typeof window !== \"undefined\") {\n  // Browser environment using XMLHttpRequest\n  const {XMLHttpRequest, Blob} = window;\n\n  moduleExport.isSupported = (\n    XMLHttpRequest &&\n    Blob &&\n    typeof Blob.prototype.slice === \"function\"\n  );\n} else {\n  // Node.js environment using http module\n  moduleExport.isSupported = true;\n  // make FileStorage module available as it will not be set by default.\n  moduleExport.FileStorage = storage.FileStorage;\n}\n\n// The usage of the commonjs exporting syntax instead of the new ECMAScript\n// one is actually inteded and prevents weird behaviour if we are trying to\n// import this module in another module using Babel.\nmodule.exports = moduleExport;\n","/* global window */\nimport DetailedError from \"./error\";\nimport extend from \"extend\";\nimport { Base64 } from \"js-base64\";\n\n// We import the files used inside the Node environment which are rewritten\n// for browsers using the rules defined in the package.json\nimport { newRequest, resolveUrl } from \"./node/request\";\nimport { getSource } from \"./node/source\";\nimport { getStorage } from \"./node/storage\";\nimport fingerprint from \"./node/fingerprint\";\n\nconst defaultOptions = {\n  endpoint: null,\n  fingerprint,\n  resume: true,\n  onProgress: null,\n  onChunkComplete: null,\n  onSuccess: null,\n  onError: null,\n  headers: {},\n  chunkSize: Infinity,\n  withCredentials: false,\n  uploadUrl: null,\n  uploadSize: null,\n  overridePatchMethod: false,\n  retryDelays: null,\n  removeFingerprintOnSuccess: false,\n  uploadLengthDeferred: false,\n  urlStorage: null,\n  fileReader: null,\n  uploadDataDuringCreation: false\n};\n\nclass Upload {\n  constructor(file, options) {\n    this.options = extend(true, {}, defaultOptions, options);\n\n    // The storage module used to store URLs\n    this._storage = this.options.urlStorage;\n\n    // The underlying File/Blob object\n    this.file = file;\n\n    // The URL against which the file will be uploaded\n    this.url = null;\n\n    // The underlying XHR object for the current PATCH request\n    this._xhr = null;\n\n    // The fingerpinrt for the current file (set after start())\n    this._fingerprint = null;\n\n    // The offset used in the current PATCH request\n    this._offset = null;\n\n    // True if the current PATCH request has been aborted\n    this._aborted = false;\n\n    // The file's size in bytes\n    this._size = null;\n\n    // The Source object which will wrap around the given file and provides us\n    // with a unified interface for getting its size and slice chunks from its\n    // content allowing us to easily handle Files, Blobs, Buffers and Streams.\n    this._source = null;\n\n    // The current count of attempts which have been made. Null indicates none.\n    this._retryAttempt = 0;\n\n    // The timeout's ID which is used to delay the next retry\n    this._retryTimeout = null;\n\n    // The offset of the remote upload before the latest attempt was started.\n    this._offsetBeforeRetry = 0;\n  }\n\n  static terminate(url, options, cb) {\n    if (typeof options !== \"function\" && typeof cb !== \"function\") {\n      throw new Error(\"tus: a callback function must be specified\");\n    }\n\n    if (typeof options === \"function\") {\n      cb = options;\n      options = {};\n    }\n\n    let retryAttempt = 0;\n    const retryIfShould = (err) => {\n      if (shouldRetry(err, retryAttempt, options)) {\n        const delay = options.retryDelays[retryAttempt++];\n        setTimeout(() => {\n          Upload.terminate(url, options, cb);\n        }, delay);\n      } else {\n        cb(err);\n      }\n    };\n\n    let xhr = newRequest();\n    xhr.open(\"DELETE\", url, true);\n\n    xhr.onload = () => {\n      if (xhr.status !== 204) {\n        const err = new Error(\"tus: unexpected response while terminating upload\");\n        retryIfShould(new DetailedError(err, null, xhr));\n        return;\n      }\n\n      cb();\n    };\n\n    xhr.onerror = (err) => {\n      retryIfShould(new DetailedError(err, new Error(\"tus: failed to terminate upload\"), xhr));\n    };\n\n    setupXHR(xhr, options);\n    xhr.send(null);\n  }\n\n  start() {\n    let file = this.file;\n\n    if (!file) {\n      this._emitError(new Error(\"tus: no file or stream to upload provided\"));\n      return;\n    }\n\n    if (!this.options.endpoint && !this.options.uploadUrl) {\n      this._emitError(new Error(\"tus: neither an endpoint or an upload URL is provided\"));\n      return;\n    }\n\n    if (this.options.resume && this._storage == null) {\n      this._storage = getStorage();\n    }\n\n    if (this._source) {\n      this._start(this._source);\n    } else {\n      const fileReader = this.options.fileReader || getSource;\n      fileReader(file, this.options.chunkSize, (err, source) => {\n        if (err) {\n          this._emitError(err);\n          return;\n        }\n\n        this._source = source;\n        this._start(source);\n      });\n    }\n  }\n\n  _start(source) {\n    let file = this.file;\n\n\n    // First, we look at the uploadLengthDeferred option.\n    // Next, we check if the caller has supplied a manual upload size.\n    // Finally, we try to use the calculated size from the source object.\n    if (this.options.uploadLengthDeferred) {\n      this._size = null;\n    } else if (this.options.uploadSize != null) {\n      this._size = +this.options.uploadSize;\n      if (isNaN(this._size)) {\n        this._emitError(new Error(\"tus: cannot convert `uploadSize` option into a number\"));\n        return;\n      }\n    } else {\n      this._size = source.size;\n      if (this._size == null) {\n        this._emitError(new Error(\"tus: cannot automatically derive upload's size from input and must be specified manually using the `uploadSize` option\"));\n        return;\n      }\n    }\n\n    let retryDelays = this.options.retryDelays;\n    if (retryDelays != null) {\n      if (Object.prototype.toString.call(retryDelays) !== \"[object Array]\") {\n        this._emitError(new Error(\"tus: the `retryDelays` option must either be an array or null\"));\n        return;\n      } else {\n        let errorCallback = this.options.onError;\n        this.options.onError = (err) => {\n          // Restore the original error callback which may have been set.\n          this.options.onError = errorCallback;\n\n          // We will reset the attempt counter if\n          // - we were already able to connect to the server (offset != null) and\n          // - we were able to upload a small chunk of data to the server\n          let shouldResetDelays = this._offset != null && (this._offset > this._offsetBeforeRetry);\n          if (shouldResetDelays) {\n            this._retryAttempt = 0;\n          }\n\n          if (!shouldRetry(err, this._retryAttempt, this.options)) {\n            this._emitError(err);\n            return;\n          }\n\n          let delay = retryDelays[this._retryAttempt++];\n\n          this._offsetBeforeRetry = this._offset;\n          this.options.uploadUrl = this.url;\n\n          this._retryTimeout = setTimeout(() => {\n            this.start();\n          }, delay);\n        };\n      }\n    }\n\n    // Reset the aborted flag when the upload is started or else the\n    // _startUpload will stop before sending a request if the upload has been\n    // aborted previously.\n    this._aborted = false;\n\n    // The upload had been started previously and we should reuse this URL.\n    if (this.url != null) {\n      this._resumeUpload();\n      return;\n    }\n\n    // A URL has manually been specified, so we try to resume\n    if (this.options.uploadUrl != null) {\n      this.url = this.options.uploadUrl;\n      this._resumeUpload();\n      return;\n    }\n\n    // Try to find the endpoint for the file in the storage\n    if (this._hasStorage()) {\n      this.options.fingerprint(file, this.options, (err, fingerprintValue) => {\n        if (err) {\n          this._emitError(err);\n          return;\n        }\n\n        this._fingerprint = fingerprintValue;\n        this._storage.getItem(this._fingerprint, (err, resumedUrl) => {\n          if (err) {\n            this._emitError(err);\n            return;\n          }\n\n          if (resumedUrl != null) {\n            this.url = resumedUrl;\n            this._resumeUpload();\n          } else {\n            this._createUpload();\n          }\n        });\n      });\n    } else {\n      // An upload has not started for the file yet, so we start a new one\n      this._createUpload();\n    }\n  }\n\n  abort(shouldTerminate, cb) {\n    if (this._xhr !== null) {\n      this._xhr.abort();\n      this._source.close();\n    }\n    this._aborted = true;\n\n    if (this._retryTimeout != null) {\n      clearTimeout(this._retryTimeout);\n      this._retryTimeout = null;\n    }\n\n    cb = cb || function () {};\n    if (shouldTerminate && this.url != null) {\n      Upload.terminate(this.url, this.options, (err) => {\n        if (err) {\n          return cb(err);\n        }\n\n        this._hasStorage() ? this._storage.removeItem(this._fingerprint, cb) : cb();\n      });\n    } else {\n      cb();\n    }\n  }\n\n  _hasStorage() {\n    return this.options.resume && this._storage;\n  }\n\n  _emitXhrError(xhr, err, causingErr) {\n    this._emitError(new DetailedError(err, causingErr, xhr));\n  }\n\n  _emitError(err) {\n    if (typeof this.options.onError === \"function\") {\n      this.options.onError(err);\n    } else {\n      throw err;\n    }\n  }\n\n  _emitSuccess() {\n    if (typeof this.options.onSuccess === \"function\") {\n      this.options.onSuccess();\n    }\n  }\n\n  /**\n   * Publishes notification when data has been sent to the server. This\n   * data may not have been accepted by the server yet.\n   * @param  {number} bytesSent  Number of bytes sent to the server.\n   * @param  {number} bytesTotal Total number of bytes to be sent to the server.\n   */\n  _emitProgress(bytesSent, bytesTotal) {\n    if (typeof this.options.onProgress === \"function\") {\n      this.options.onProgress(bytesSent, bytesTotal);\n    }\n  }\n\n  /**\n   * Publishes notification when a chunk of data has been sent to the server\n   * and accepted by the server.\n   * @param  {number} chunkSize  Size of the chunk that was accepted by the\n   *                             server.\n   * @param  {number} bytesAccepted Total number of bytes that have been\n   *                                accepted by the server.\n   * @param  {number} bytesTotal Total number of bytes to be sent to the server.\n   */\n  _emitChunkComplete(chunkSize, bytesAccepted, bytesTotal) {\n    if (typeof this.options.onChunkComplete === \"function\") {\n      this.options.onChunkComplete(chunkSize, bytesAccepted, bytesTotal);\n    }\n  }\n\n  /**\n   * Set the headers used in the request and the withCredentials property\n   * as defined in the options\n   *\n   * @param {XMLHttpRequest} xhr\n   */\n  _setupXHR(xhr) {\n    this._xhr = xhr;\n    setupXHR(xhr, this.options);\n  }\n\n  /**\n   * Create a new upload using the creation extension by sending a POST\n   * request to the endpoint. After successful creation the file will be\n   * uploaded\n   *\n   * @api private\n   */\n  _createUpload() {\n    if (!this.options.endpoint) {\n      this._emitError(new Error(\"tus: unable to create upload because no endpoint is provided\"));\n      return;\n    }\n\n    let xhr = newRequest();\n    xhr.open(\"POST\", this.options.endpoint, true);\n\n    xhr.onload = () => {\n      if (!inStatusCategory(xhr.status, 200)) {\n        this._emitXhrError(xhr, new Error(\"tus: unexpected response while creating upload\"));\n        return;\n      }\n\n      let location = xhr.getResponseHeader(\"Location\");\n      if (location == null) {\n        this._emitXhrError(xhr, new Error(\"tus: invalid or missing Location header\"));\n        return;\n      }\n\n      this.url = resolveUrl(this.options.endpoint, location);\n\n      if (this._size === 0) {\n        // Nothing to upload and file was successfully created\n        this._emitSuccess();\n        this._source.close();\n        return;\n      }\n\n      if (this._hasStorage()) {\n        this._storage.setItem(this._fingerprint, this.url, (err) => {\n          if (err) {\n            this._emitError(err);\n          }\n        });\n      }\n\n      if (this.options.uploadDataDuringCreation) {\n        this._handleUploadResponse(xhr);\n      } else {\n        this._offset = 0;\n        this._startUpload();\n\n      }\n    };\n\n    xhr.onerror = (err) => {\n      this._emitXhrError(xhr, new Error(\"tus: failed to create upload\"), err);\n    };\n\n    this._setupXHR(xhr);\n    if (this.options.uploadLengthDeferred) {\n      xhr.setRequestHeader(\"Upload-Defer-Length\", 1);\n    } else {\n      xhr.setRequestHeader(\"Upload-Length\", this._size);\n    }\n\n    // Add metadata if values have been added\n    var metadata = encodeMetadata(this.options.metadata);\n    if (metadata !== \"\") {\n      xhr.setRequestHeader(\"Upload-Metadata\", metadata);\n    }\n\n    if (this.options.uploadDataDuringCreation && !this.options.uploadLengthDeferred) {\n      this._offset = 0;\n      this._addChunkToRequest(xhr);\n    } else {\n      xhr.send(null);\n    }\n  }\n\n  /*\n   * Try to resume an existing upload. First a HEAD request will be sent\n   * to retrieve the offset. If the request fails a new upload will be\n   * created. In the case of a successful response the file will be uploaded.\n   *\n   * @api private\n   */\n  _resumeUpload() {\n    let xhr = newRequest();\n    xhr.open(\"HEAD\", this.url, true);\n\n    xhr.onload = () => {\n      if (!inStatusCategory(xhr.status, 200)) {\n        if (this._hasStorage() && inStatusCategory(xhr.status, 400)) {\n          // Remove stored fingerprint and corresponding endpoint,\n          // on client errors since the file can not be found\n          this._storage.removeItem(this._fingerprint, (err) => {\n            if (err) {\n              this._emitError(err);\n            }\n          });\n        }\n\n        // If the upload is locked (indicated by the 423 Locked status code), we\n        // emit an error instead of directly starting a new upload. This way the\n        // retry logic can catch the error and will retry the upload. An upload\n        // is usually locked for a short period of time and will be available\n        // afterwards.\n        if (xhr.status === 423) {\n          this._emitXhrError(xhr, new Error(\"tus: upload is currently locked; retry later\"));\n          return;\n        }\n\n        if (!this.options.endpoint) {\n          // Don't attempt to create a new upload if no endpoint is provided.\n          this._emitXhrError(xhr, new Error(\"tus: unable to resume upload (new upload cannot be created without an endpoint)\"));\n          return;\n        }\n\n        // Try to create a new upload\n        this.url = null;\n        this._createUpload();\n        return;\n      }\n\n      let offset = parseInt(xhr.getResponseHeader(\"Upload-Offset\"), 10);\n      if (isNaN(offset)) {\n        this._emitXhrError(xhr, new Error(\"tus: invalid or missing offset value\"));\n        return;\n      }\n\n      let length = parseInt(xhr.getResponseHeader(\"Upload-Length\"), 10);\n      if (isNaN(length) && !this.options.uploadLengthDeferred) {\n        this._emitXhrError(xhr, new Error(\"tus: invalid or missing length value\"));\n        return;\n      }\n\n      // Upload has already been completed and we do not need to send additional\n      // data to the server\n      if (offset === length) {\n        this._emitProgress(length, length);\n        this._emitSuccess();\n        return;\n      }\n\n      this._offset = offset;\n      this._startUpload();\n    };\n\n    xhr.onerror = (err) => {\n      this._emitXhrError(xhr, new Error(\"tus: failed to resume upload\"), err);\n    };\n\n    this._setupXHR(xhr);\n    xhr.send(null);\n  }\n\n  /**\n   * Start uploading the file using PATCH requests. The file will be divided\n   * into chunks as specified in the chunkSize option. During the upload\n   * the onProgress event handler may be invoked multiple times.\n   *\n   * @api private\n   */\n  _startUpload() {\n    // If the upload has been aborted, we will not send the next PATCH request.\n    // This is important if the abort method was called during a callback, such\n    // as onChunkComplete or onProgress.\n    if (this._aborted) {\n      return;\n    }\n\n    let xhr = newRequest();\n\n    // Some browser and servers may not support the PATCH method. For those\n    // cases, you can tell tus-js-client to use a POST request with the\n    // X-HTTP-Method-Override header for simulating a PATCH request.\n    if (this.options.overridePatchMethod) {\n      xhr.open(\"POST\", this.url, true);\n      xhr.setRequestHeader(\"X-HTTP-Method-Override\", \"PATCH\");\n    } else {\n      xhr.open(\"PATCH\", this.url, true);\n    }\n\n    xhr.onload = () => {\n      if (!inStatusCategory(xhr.status, 200)) {\n        this._emitXhrError(xhr, new Error(\"tus: unexpected response while uploading chunk\"));\n        return;\n      }\n\n      this._handleUploadResponse(xhr);\n    };\n\n    xhr.onerror = (err) => {\n      // Don't emit an error if the upload was aborted manually\n      if (this._aborted) {\n        return;\n      }\n\n      this._emitXhrError(xhr, new Error(\"tus: failed to upload chunk at offset \" + this._offset), err);\n    };\n\n    this._setupXHR(xhr);\n\n    xhr.setRequestHeader(\"Upload-Offset\", this._offset);\n    this._addChunkToRequest(xhr);\n  }\n\n  /**\n   * _addChunktoRequest reads a chunk from the source and sends it using the\n   * supplied XHR object. It will not handle the response.\n   */\n  _addChunkToRequest(xhr) {\n    // Test support for progress events before attaching an event listener\n    if (\"upload\" in xhr) {\n      xhr.upload.onprogress = (e) => {\n        if (!e.lengthComputable) {\n          return;\n        }\n\n        this._emitProgress(start + e.loaded, this._size);\n      };\n    }\n\n    xhr.setRequestHeader(\"Content-Type\", \"application/offset+octet-stream\");\n\n    let start = this._offset;\n    let end = this._offset + this.options.chunkSize;\n\n    // The specified chunkSize may be Infinity or the calcluated end position\n    // may exceed the file's size. In both cases, we limit the end position to\n    // the input's total size for simpler calculations and correctness.\n    if ((end === Infinity || end > this._size) && !this.options.uploadLengthDeferred) {\n      end = this._size;\n    }\n\n    this._source.slice(start, end, (err, value, complete) => {\n      if (err) {\n        this._emitError(err);\n        return;\n      }\n\n      if (this.options.uploadLengthDeferred) {\n        if (complete) {\n          this._size = this._offset + (value && value.size ? value.size : 0);\n          xhr.setRequestHeader(\"Upload-Length\", this._size);\n        }\n      }\n\n      if (value === null) {\n        xhr.send();\n      } else {\n        xhr.send(value);\n        this._emitProgress(this._offset, this._size);\n      }\n    });\n  }\n\n  /**\n   * _handleUploadResponse is used by requests that haven been sent using _addChunkToRequest\n   * and already have received a response.\n   */\n  _handleUploadResponse(xhr) {\n    let offset = parseInt(xhr.getResponseHeader(\"Upload-Offset\"), 10);\n    if (isNaN(offset)) {\n      this._emitXhrError(xhr, new Error(\"tus: invalid or missing offset value\"));\n      return;\n    }\n\n    this._emitProgress(offset, this._size);\n    this._emitChunkComplete(offset - this._offset, offset, this._size);\n\n    this._offset = offset;\n\n    if (offset == this._size) {\n      if (this._hasStorage()) {\n        if (this.options.removeFingerprintOnSuccess && this.options.resume) {\n          // Remove stored fingerprint and corresponding endpoint. This causes\n          // new upload of the same file must be treated as a different file.\n          this._storage.removeItem(this._fingerprint, (err) => {\n            if (err) {\n              this._emitError(err);\n            }\n          });\n        }\n      }\n\n      // Yay, finally done :)\n      this._emitSuccess();\n      this._source.close();\n      return;\n    }\n\n    this._startUpload();\n  }\n}\n\nfunction encodeMetadata(metadata) {\n  var encoded = [];\n\n  for (var key in metadata) {\n    encoded.push(key + \" \" + Base64.encode(metadata[key]));\n  }\n\n  return encoded.join(\",\");\n}\n\n/**\n * Checks whether a given status is in the range of the expected category.\n * For example, only a status between 200 and 299 will satisfy the category 200.\n *\n * @api private\n */\nfunction inStatusCategory(status, category) {\n  return (status >= category && status < (category + 100));\n}\n\nfunction setupXHR(xhr, options) {\n  xhr.setRequestHeader(\"Tus-Resumable\", \"1.0.0\");\n  let headers = options.headers || {};\n\n  for (let name in headers) {\n    xhr.setRequestHeader(name, headers[name]);\n  }\n\n  xhr.withCredentials = options.withCredentials;\n}\n\n/**\n * Checks whether the browser running this code has internet access.\n * This function will always return true in the node.js environment\n *\n * @api private\n */\nfunction isOnline() {\n  let online = true;\n  if (typeof window !== \"undefined\" &&\n        \"navigator\" in window &&\n        window.navigator.onLine === false) {\n    online = false;\n  }\n\n  return online;\n}\n\n/**\n * Checks whether or not it is ok to retry a request.\n * @param {Error} err the error returned from the last request\n * @param {number} retryAttempt the number of times the request has already been retried\n * @param {object} options tus Upload options\n *\n * @api private\n */\nfunction shouldRetry(err, retryAttempt, options) {\n  // We only attempt a retry if\n  // - retryDelays option is set\n  // - we didn't exceed the maxium number of retries, yet, and\n  // - this error was caused by a request or it's response and\n  // - the error is server error (i.e. no a status 4xx or a 409 or 423) and\n  // - the browser does not indicate that we are offline\n  let status = err.originalRequest ? err.originalRequest.status : 0;\n  let isServerError = !inStatusCategory(status, 400) || status === 409 || status === 423;\n  return options.retryDelays != null &&\n                    retryAttempt < options.retryDelays.length &&\n                    err.originalRequest != null &&\n                    isServerError &&\n                    isOnline();\n}\n\nUpload.defaultOptions = defaultOptions;\n\nexport default Upload;\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","/*\n *  base64.js\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n */\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined'\n        ? module.exports = factory(global)\n        : typeof define === 'function' && define.amd\n        ? define(factory) : factory(global)\n}((\n    typeof self !== 'undefined' ? self\n        : typeof window !== 'undefined' ? window\n        : typeof global !== 'undefined' ? global\n: this\n), function(global) {\n    'use strict';\n    // existing version for noConflict()\n    global = global || {};\n    var _Base64 = global.Base64;\n    var version = \"2.5.2\";\n    // if node.js and NOT React Native, we use Buffer\n    var buffer;\n    if (typeof module !== 'undefined' && module.exports) {\n        try {\n            buffer = eval(\"require('buffer').Buffer\");\n        } catch (err) {\n            buffer = undefined;\n        }\n    }\n    // constants\n    var b64chars\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    var b64tab = function(bin) {\n        var t = {};\n        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;\n        return t;\n    }(b64chars);\n    var fromCharCode = String.fromCharCode;\n    // encoder stuff\n    var cb_utob = function(c) {\n        if (c.length < 2) {\n            var cc = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))\n                                + fromCharCode(0x80 | (cc & 0x3f)))\n                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\n        } else {\n            var cc = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))\n                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    var utob = function(u) {\n        return u.replace(re_utob, cb_utob);\n    };\n    var cb_encode = function(ccc) {\n        var padlen = [0, 2, 1][ccc.length % 3],\n        ord = ccc.charCodeAt(0) << 16\n            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)\n            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),\n        chars = [\n            b64chars.charAt( ord >>> 18),\n            b64chars.charAt((ord >>> 12) & 63),\n            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\n            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\n        ];\n        return chars.join('');\n    };\n    var btoa = global.btoa ? function(b) {\n        return global.btoa(b);\n    } : function(b) {\n        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n    };\n    var _encode = function(u) {\n        var isUint8Array = Object.prototype.toString.call(u) === '[object Uint8Array]';\n        return isUint8Array ? u.toString('base64')\n            : btoa(utob(String(u)));\n    }\n    var encode = function(u, urisafe) {\n        return !urisafe\n            ? _encode(u)\n            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {\n                return m0 == '+' ? '-' : '_';\n            }).replace(/=/g, '');\n    };\n    var encodeURI = function(u) { return encode(u, true) };\n    // decoder stuff\n    var re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\n    var cb_btou = function(cccc) {\n        switch(cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                |    ((0x3f & cccc.charCodeAt(1)) << 12)\n                |    ((0x3f & cccc.charCodeAt(2)) <<  6)\n                |     (0x3f & cccc.charCodeAt(3)),\n            offset = cp - 0x10000;\n            return (fromCharCode((offset  >>> 10) + 0xD800)\n                    + fromCharCode((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return fromCharCode(\n                ((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    |  (0x3f & cccc.charCodeAt(2))\n            );\n        default:\n            return  fromCharCode(\n                ((0x1f & cccc.charCodeAt(0)) << 6)\n                    |  (0x3f & cccc.charCodeAt(1))\n            );\n        }\n    };\n    var btou = function(b) {\n        return b.replace(re_btou, cb_btou);\n    };\n    var cb_decode = function(cccc) {\n        var len = cccc.length,\n        padlen = len % 4,\n        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)\n            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)\n            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)\n            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),\n        chars = [\n            fromCharCode( n >>> 16),\n            fromCharCode((n >>>  8) & 0xff),\n            fromCharCode( n         & 0xff)\n        ];\n        chars.length -= [0, 0, 2, 1][padlen];\n        return chars.join('');\n    };\n    var _atob = global.atob ? function(a) {\n        return global.atob(a);\n    } : function(a){\n        return a.replace(/\\S{1,4}/g, cb_decode);\n    };\n    var atob = function(a) {\n        return _atob(String(a).replace(/[^A-Za-z0-9\\+\\/]/g, ''));\n    };\n    var _decode = buffer ?\n        buffer.from && Uint8Array && buffer.from !== Uint8Array.from\n        ? function(a) {\n            return (a.constructor === buffer.constructor\n                    ? a : buffer.from(a, 'base64')).toString();\n        }\n        : function(a) {\n            return (a.constructor === buffer.constructor\n                    ? a : new buffer(a, 'base64')).toString();\n        }\n        : function(a) { return btou(_atob(a)) };\n    var decode = function(a){\n        return _decode(\n            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })\n                .replace(/[^A-Za-z0-9\\+\\/]/g, '')\n        );\n    };\n    var noConflict = function() {\n        var Base64 = global.Base64;\n        global.Base64 = _Base64;\n        return Base64;\n    };\n    // export Base64\n    global.Base64 = {\n        VERSION: version,\n        atob: atob,\n        btoa: btoa,\n        fromBase64: decode,\n        toBase64: encode,\n        utob: utob,\n        encode: encode,\n        encodeURI: encodeURI,\n        btou: btou,\n        decode: decode,\n        noConflict: noConflict,\n        __buffer__: buffer\n    };\n    // if ES5 is available, make Base64.extendString() available\n    if (typeof Object.defineProperty === 'function') {\n        var noEnum = function(v){\n            return {value:v,enumerable:false,writable:true,configurable:true};\n        };\n        global.Base64.extendString = function () {\n            Object.defineProperty(\n                String.prototype, 'fromBase64', noEnum(function () {\n                    return decode(this)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64', noEnum(function (urisafe) {\n                    return encode(this, urisafe)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64URI', noEnum(function () {\n                    return encode(this, true)\n                }));\n        };\n    }\n    //\n    // export Base64 to the namespace\n    //\n    if (global['Meteor']) { // Meteor.js\n        Base64 = global.Base64;\n    }\n    // module.exports and AMD are mutually exclusive.\n    // module.exports has precedence.\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports.Base64 = global.Base64;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], function(){ return global.Base64 });\n    }\n    // that's it!\n    return {Base64: global.Base64}\n}));\n\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , undef;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String|Null} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input.replace(/\\+/g, ' '));\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Attempts to encode a given input.\n *\n * @param {String} input The string that needs to be encoded.\n * @returns {String|Null} The encoded string.\n * @api private\n */\nfunction encode(input) {\n  try {\n    return encodeURIComponent(input);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  while (part = parser.exec(query)) {\n    var key = decode(part[1])\n      , value = decode(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    // In the case if failed decoding, we want to omit the key/value pairs\n    // from the result.\n    //\n    if (key === null || value === null || key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = []\n    , value\n    , key;\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (key in obj) {\n    if (has.call(obj, key)) {\n      value = obj[key];\n\n      //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n      if (!value && (value === null || value === undef || isNaN(value))) {\n        value = '';\n      }\n\n      key = encodeURIComponent(key);\n      value = encodeURIComponent(value);\n\n      //\n      // If we failed to encode the strings, we should bail out as we don't\n      // want to add invalid strings to the query.\n      //\n      if (key === null || value === null) continue;\n      pairs.push(key +'='+ value);\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n","'use strict';\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n","'use strict';\n\nvar required = require('requires-port')\n  , qs = require('querystringify')\n  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\S\\s]*)/i\n  , whitespace = '[\\\\x09\\\\x0A\\\\x0B\\\\x0C\\\\x0D\\\\x20\\\\xA0\\\\u1680\\\\u180E\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200A\\\\u202F\\\\u205F\\\\u3000\\\\u2028\\\\u2029\\\\uFEFF]'\n  , left = new RegExp('^'+ whitespace +'+');\n\n/**\n * Trim a given string.\n *\n * @param {String} str String to trim.\n * @public\n */\nfunction trimLeft(str) {\n  return (str ? str : '').toString().replace(left, '');\n}\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  function sanitize(address) {          // Sanitize what is left of the address\n    return address.replace('\\\\', '/');\n  },\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d+)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\nfunction lolcation(loc) {\n  var globalVar;\n\n  if (typeof window !== 'undefined') globalVar = window;\n  else if (typeof global !== 'undefined') globalVar = global;\n  else if (typeof self !== 'undefined') globalVar = self;\n  else globalVar = {};\n\n  var location = globalVar.location || {};\n  loc = loc || location;\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\nfunction extractProtocol(address) {\n  address = trimLeft(address);\n  var match = protocolre.exec(address);\n\n  return {\n    protocol: match[1] ? match[1].toLowerCase() : '',\n    slashes: !!match[2],\n    rest: match[3]\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\nfunction resolve(relative, base) {\n  if (relative === '') return base;\n\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} [location] Location defaults for relative paths.\n * @param {Boolean|Function} [parser] Parser for the query string.\n * @private\n */\nfunction Url(address, location, parser) {\n  address = trimLeft(address);\n\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '');\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (!extracted.slashes) instructions[3] = [/(.*)/, 'pathname'];\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      if (~(index = address.indexOf(parse))) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n  if (url.auth) {\n    instruction = url.auth.split(':');\n    url.username = instruction[0] || '';\n    url.password = instruction[1] || '';\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (/:\\d+$/.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    default:\n      url[part] = value;\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result = protocol + (url.slashes ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  }\n\n  result += url.host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nUrl.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.trimLeft = trimLeft;\nUrl.qs = qs;\n\nmodule.exports = Url;\n"]}